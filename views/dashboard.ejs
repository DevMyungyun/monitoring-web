<main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-md-4">
    <div
      class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
      <h1 class="h2">Dashboard</h1>
      <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group mr-2">
          <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
          <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
        </div>
        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
          <span data-feather="calendar"></span>
          This week
        </button>
      </div>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-sm">
            <tr class="d-flex">
                <td>
                    <h3>Windows</h3>
                    <canvas class="my-4 w-100" id="windows" width="900" height="380"></canvas>
                </td>
                <td>
                    <h3>Linux</h3>
                    <canvas class="my-4 w-100" id="linux" width="900" height="380"></canvas>
                </td>
            </tr>
        </table>
    </div>
  </main>
<script src="/chart/Chart.js"></script>
<!-- <link rel="stylesheet" type="text/css" href="/chart/Chart.min.css"> -->
<script>
var num = Math.random();
var data =<%- context %>;

const win = data.windows.reduce((t, a) => { 
    if (t[a]) { t[a]++ } else { t[a] = 1 } return t }, {}) 
const lin = data.linux.reduce((t, a) => { 
    if (t[a]) { t[a]++ } else { t[a] = 1 } return t }, {}) 
    
var windows = document.getElementById('windows');
var windowsChart = new Chart(windows, {
  type: 'pie',
    data: {
        labels: ["Running", "Stop", "Before Handshake"],
        datasets: [{
        backgroundColor: [
            "#2ecc71",
            "#95a5a6",
            "#f1c40f"    
        ],
        data: [win.running, win.stop, win.beforeHandshake]
        }]
    }
});

var linux = document.getElementById('linux');
var linuxChart = new Chart(linux, {
  type: 'pie',
    data: {
        labels: ["Running", "Stop", "Before Handshake"],
        datasets: [{
        backgroundColor: [
            "#2ecc71",
            "#95a5a6",
            "#f1c40f"    
        ],
        data: [lin.running, lin.stop, lin.beforeHandshake]
        }]
    }
});
</script>